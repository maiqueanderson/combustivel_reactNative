import React, { useEffect, useState } from 'react';
import {  Card } from 'react-native-paper';
import { View, Text, StyleSheet, TouchableOpacity, Button } from 'react-native';

import { bindActionCreators } from 'redux';
import { getAuth, onAuthStateChanged } from "firebase/auth";
import { fetchUser } from '../redux/actions';
import 'firebase/firestore';
import { app, db }  from '../database/firebaseConfig';
import { connect } from 'react-redux';

import { getDatabase } from "firebase/database";





const Main = ({ fetchUser }) => {



    const [id, setId] = useState(null);
    const [nome, setNome] = useState(null);

    
    useEffect(() => {
        const auth = getAuth(app);
        const usuario = auth.currentUser;
        onAuthStateChanged(auth, (user) => {

          if (user) {

            const uid = user.uid;
            const displayName = usuario.displayName;
            setId(uid);
            setNome(displayName)

          } else {
            console.log('usuario não está logado')
          }
          
        });
      }, []);

  useEffect(() => {
    fetchUser();
  }, []);

console.log(id);
console.log(nome);

  return (
    <View style={styles.container}>
      <View style={styles.info}>
        <Card>
          <Card.Title
            title='Teste Nome'
            subtitle={id}
            
          />
        </Card>
      </View>
    </View>
   )


  
}


const styles = StyleSheet.create({
    container: {
      flex: 1,
    },
    info: {
      margin: 20,
    },
    gallery: {
      flex: 1,
    },
    images: {
      flex: 1 / 3,
      height: 100,
    },
    image: {
      flex: 1,
      aspectRatio: 1 / 1,
    },
  })
  

const mapDispatchToProps = (dispatch) =>
  bindActionCreators(
    { fetchUser },
    dispatch
  );

export default connect(null, mapDispatchToProps)(Main);
